version: '3'

services:
# Frontend web proxy for accessing services and providing TLS encryption
  nginx:
    build:
      context: ./nginx
    container_name: cerebralcortex-nginx
    restart: always
    volumes:
      - ./nginx/site:/var/www
      - ./nginx/nginx-selfsigned.crt:/etc/ssh/certs/ssl-cert.crt
      - ./nginx/nginx-selfsigned.key:/etc/ssh/certs/ssl-cert.key
      - ./nginx/insecure_site.conf:/etc/nginx/site.conf
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - grafana
      - apiserver
      - jupyter

  apiserver:
    image: md2korg/cerebralcortex-apiserver:3.0.0
    container_name: cerebralcortex-apiserver
    restart: always
    expose:
      - 80
    depends_on:
      - mysql
      - kafka
    environment:
      - MYSQL_HOST=${MYSQL:-mysql}
      - MYSQL_DB_USER=${MYSQL_ROOT_USER:-root}
      - MYSQL_DB_PASS=${MYSQL_ROOT_PASSWORD:-pass}
      - KAFKA_HOST=${KAFKA_HOST:-kafka}
    volumes:
      - ./mount_points/apiserver:/data
      - ./cc_conf:/cc_conf
      - ./merebrum_config:/merebrum_config

# Data vizualizations
  grafana:
    image: grafana/grafana
    container_name: cerebralcortex-grafana
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - influxdb
    user: "0"
    environment:
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana/
    volumes:
      - ./mount_points/grafana/data:/var/lib/grafana
      - ./mount_points/grafana/logs:/var/log/grafana
      - ./grafana:/etc/grafana/provisioning

  influxdb:
    image: influxdb:alpine
    container_name: cerebralcortex-influxdb
    restart: always
    ports:
      - "8086:8086"
    volumes:
      - ./mount_points/influxdb:/var/lib/influxdb
    environment:
      - INFLUXDB_DB="cerebralcortex_raw"

# Data Science Dashboard Interface
  jupyter:
    image: md2korg/cerebralcortex-jupyter:latest
    container_name: cerebralcortex-jupyterhub
    ports:
      - 8000
    restart: always
    environment:
      TINI_SUBREAPER: 'true'
    volumes:
      - ./jupyter/conf:/srv/jupyterhub/conf
      - ./cc_conf:/home/md2k/cc_conf
      - ./mount_points/cc_data:/cc_data
      - ./jupyter:/home/md2k/demo
    command: sh -c "chown -R md2k /cc_data/ && jupyterhub --no-ssl --config /srv/jupyterhub/conf/jupyterhub_config.py"



#Cerebral Cortex backend
  kafka:
    image: wurstmeister/kafka:2.12-2.1.1
    container_name: cerebralcortex-kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      # use either HOSTNAME_COMMAND or KAFKA_ADVERTISED_HOST_NAME
      HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
      # KAFKA_ADVERTISED_HOST_NAME: YOUR-LOCAL-HOST-IP (not localhost or 127.0.0.1)
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "filequeue:8:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./mount_points/kafka:/kafka
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: cerebralcortex-zookeeper
    restart: always
    ports:
      - "2181:2181"

  mysql:
    image: mysql:5.7
    container_name: cerebralcortex-mysql
    restart: always
    labels:
        org.md2k.cerebralcortex.name: "MySql"
    ports:
      - 3306:3306 # Default mysql port
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-pass}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-cerebralcortex}
      - MYSQL_USER=${MYSQL_USER:-cerebralcortex}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-cerebralcortex_pass}
    volumes:
      - ./mysql/initdb.d:/docker-entrypoint-initdb.d
      - ./mount_points/mysql:/var/lib/mysql